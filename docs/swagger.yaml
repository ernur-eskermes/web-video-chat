basePath: /api/v1/
definitions:
  v1.createSubscriptionInput:
    properties:
      user_id:
        type: string
    type: object
  v1.refreshInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.roomCreateInput:
    properties:
      name:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - name
    type: object
  v1.signInInput:
    properties:
      password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 64
        type: string
    required:
    - password
    - username
    type: object
  v1.tokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  v1.userAccountResponse:
    properties:
      acc_subs:
        items:
          type: string
        type: array
      id:
        type: string
      pnd_subs:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  v1.userSignUpInput:
    properties:
      confirm_password:
        maxLength: 64
        minLength: 8
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 64
        type: string
    required:
    - confirm_password
    - password
    - username
    type: object
host: localhost:8000
info:
  contact: {}
  description: REST API for Web-Video-Chat App
  title: Web-Video-Chat API
  version: "1.0"
paths:
  /auth/{provider}:
    get:
      consumes:
      - text/html
      description: user auth provider
      parameters:
      - description: provider name
        in: path
        name: provider
        required: true
        type: string
      responses: {}
      summary: User Auth Provider
      tags:
      - users-auth
  /auth/{provider}/callback:
    get:
      consumes:
      - application/json
      description: user auth provider callback
      parameters:
      - description: provider name
        in: path
        name: provider
        required: true
        type: string
      responses: {}
      summary: User Auth Provider Callback
      tags:
      - users-auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: user refresh tokens
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Refresh Tokens
      tags:
      - users-auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignIn
      tags:
      - users-auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create user account
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignUp
      tags:
      - users-auth
  /rooms/create:
    post:
      consumes:
      - application/json
      description: create room
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.roomCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UsersAuth: []
      summary: Room Create
      tags:
      - rooms-create
  /users/me:
    get:
      consumes:
      - application/json
      description: user get me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userAccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UsersAuth: []
      summary: Get User Info
      tags:
      - users
  /users/subscriptions/create:
    post:
      consumes:
      - application/json
      description: create user subscription
      parameters:
      - description: create subscription
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createSubscriptionInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UsersAuth: []
      summary: Create User Subscription
      tags:
      - users
securityDefinitions:
  UsersAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
